# for developing and testing purposes.
services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8001:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  db:
    image: postgres:15
    container_name: ecommerce_postgres
    env_file:
      - .env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: ecommerce_redis
    ports:
      - "6379:6379"

  celery:
    build: .
    command: celery -A ecommerce_api worker -l info
    env_file:
      - .env
    depends_on:
      - redis
      - db
    volumes:
      - .:/app

  flower:
    build: .
    command: celery -A ecommerce_api flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - redis
      - db
    volumes:
      - .:/app

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis

volumes:
  postgres_data:


# origina docker-compose.yml content for productin setup
# services:
#   web:
#     build: .
#     command: python manage.py runserver 0.0.0.0:8000
#     volumes:
#       - .:/app
#     ports:
#       - "8001:8000"
#     env_file:
#       - .env
#     depends_on:
#       - db
#       - redis

#   db:
#     image: postgres:15
#     env_file:
#       - .env
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

#   redis:
#     image: redis:7-alpine
#     ports:
#       - "6379:6379"

#   celery:
#     build: .
#     command: celery -A ecommerce_api worker -l info
#     env_file:
#       - .env
#     depends_on:
#       - redis
#       - db

# volumes:
#   postgres_data:


